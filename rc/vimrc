" Basic runtime settings
let mapleader=","
set nocompatible
syntax on

" Vundle
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Fix coq colors
hi def CoqtailChecked ctermbg=1
hi def CoqtailSent    ctermbg=1

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"""""""""""
" Plugins "
"""""""""""
Plugin 'tpope/vim-fugitive'
Plugin 'ervandew/supertab'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'norm2782/vim-clean'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'wesQ3/vim-windowswap'
Plugin 'SacBase/vim-sac'
Plugin 'camilstaps/vim-torxakis'
Plugin 'whonore/Coqtail'
Plugin 'SirVer/ultisnips'
Plugin 'dpelle/vim-LanguageTool'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Basic editor settings
set cpoptions+=$
set virtualedit=all
set wildmenu                                              
" Display linenumbers
set relativenumber
set number
" Set case insensitive searching
set ic
" Always display at least 6 lines above and below the cursor
set scrolloff=50

" disable folding
set nofoldenable    

" Set tabsize = 4 and various tab options
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set expandtab
set autoindent

" Spell checking
set spell spelllang=en_gb

" Set word wrapping on column 80
set tw=80

" Fix lightline
set laststatus=2

" Make
command Make execute "silent !make -j" | redraw!
map <F5> :Make<cr>

" Compile pandoc
command Pdfrun execute "silent !pandoc --citeproc -o %.pdf %" | redraw!
map <F6> :Pdfrun<CR>

" Word count
map <F7> :!wc %<CR>

" Set folder for swapfiles
set bdir-=.
set bdir+=/tmp
set dir-=.
set dir+=/tmp

" Map case sensitive commands (because Derp)
:command WQA wqa
:command WQa wqa
:command Wqa wqa
:command WQ wq
:command Wq wq
:command W  w
:command Q  q
:command Qa qa
:command QA qa

" NerdTree git setup
let g:NERDTreeGitStatusIndicatorMapCustom = {
    \ "Modified"  : "~",
    \ "Staged"    : ">",
    \ "Untracked" : "<",
    \ "Renamed"   : "M",
    \ "Unmerged"  : "=",
    \ "Deleted"   : "X",
    \ "Dirty"     : "~",
    \ "Clean"     : "_",
    \ 'Ignored'   : ',',
    \ "Unknown"   : "?"
    \ }
let g:NERDTreeGitStatusShowIgnored = 1

" YouCompleteMe settings
let g:SuperTabDefaultCompletionType = 'context'

" Filetype mappings
au BufNewFile,BufRead *.ino set filetype=cpp
au BufNewFile,BufRead *.tpp set filetype=cpp
au BufNewFile,BufRead *.v   set filetype=coq

" Highlight setyp 
set colorcolumn=80
au BufNewFile,BufRead *.icl set colorcolumn=140
au BufNewFile,BufRead *.html set colorcolumn=120
au BufNewFile,BufRead *.cpp,*.c,*.h,*.hpp set colorcolumn=110
highlight ColorColumn ctermbg=darkgray

" Open h and hpp includes for clang
let &path.="/usr/include/"

" clang options
let g:clang_c_options = '-std=gnu11'
let g:clang_cpp_options = '-std=c++11 -stdlib=libstdc++ -I/usr/include'
let g:clighter_libclang_file = '/usr/lib/llvm-3.6/lib/libclang.so'

" Set ultisnips triggers
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

" Config make options
set makeprg=make

" Language tool config
let g:languagetool_cmd='/usr/bin/languagetool'
let g:languagetool_lang='en-GB'
map <F2> :LanguageToolCheck<cr>
